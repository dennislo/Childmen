package childmen.gae.aggregator.model;

import java.util.List;

import javax.persistence.Id;

import com.googlecode.objectify.Key;
import com.googlecode.objectify.Objectify;
import com.googlecode.objectify.ObjectifyService;
import com.googlecode.objectify.annotation.Cached;
import com.googlecode.objectify.annotation.Unindexed;

/**
 * Model of a Game e.g. Black Ops    
 * @author Dennis
 */
//Cache entity data globally in the appengine memcache
@Cached
public class Game {

	@Id private Long id; //auto generated by objectify	
	private String name;
	private String genre; 
	private String blurb;
	private double metarating; //a rating calculated by combining all review ratings for this game 
	@Unindexed private String imagelink; //NOTE: @Unindexed means you can't query filter using this attribute!
	
	private Key<Platform> platform;	//many to many relationship back with platform 	

	//For objectify, Gson ...
	private Game() {}

	public Game(String name, String genre, String blurb, double metarating, String imagelink) {
		this.name = name;
		this.genre = genre;
		this.blurb = blurb;
		this.metarating = metarating;
		this.imagelink = imagelink;
	}
	
	/*	
	 * Setting relationships - redundant
	 */
	//Add one review to this Game	
	public void addReview(Review review) {
		review.setGame(this);
		Objectify service = ObjectifyService.begin();	
		service.put(review);
	}

	
	//Add multiple reviews to this Game	
	public void addReviews(List<Review> reviews) {
		for (Review review : reviews) {
			review.setGame(this);
		}

		Objectify service = ObjectifyService.begin();
		service.put(reviews);
	}

	/**
	 * @return the id
	 */
	public Long getId() {
		return id;
	}

	/**
	 * @param id the id to set
	 */
	public void setId(Long id) {
		this.id = id;
	}
	
	/**
	 * @return the name
	 */
	public String getName() {
		return name;
	}

	/**
	 * @param name
	 *            the name to set
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * @return the genre
	 */
	public String getGenre() {
		return genre;
	}

	/**
	 * @param genre
	 *            the genre to set
	 */
	public void setGenre(String genre) {
		this.genre = genre;
	}

	/**
	 * @return the blurb
	 */
	public String getBlurb() {
		return blurb;
	}

	/**
	 * @param blurb
	 *            the blurb to set
	 */
	public void setBlurb(String blurb) {
		this.blurb = blurb;
	}

	/**
	 * @return the metarating
	 */
	public double getMetarating() {
		return metarating;
	}

	/**
	 * @param metarating the metarating to set
	 */
	public void setMetarating(double metarating) {
		this.metarating = metarating;
	}

	/**
	 * @return the imagelink
	 */
	public String getImagelink() {
		return imagelink;
	}

	/**
	 * @param imagelink the imagelink to set
	 */
	public void setImagelink(String imagelink) {
		this.imagelink = imagelink;
	}
	
	/**
	 * @return the platform
	 */
	public Key<Platform> getPlatform() {
		return platform;
	}

	/**
	 * @param platform the platform to set
	 */
	public void setPlatform(Platform platform) {
		this.platform = new Key<Platform>(Platform.class, platform.getId());
	}

}
